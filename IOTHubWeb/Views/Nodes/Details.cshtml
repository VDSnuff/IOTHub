@model IOTHub.ViewModels.NodeDetailsViewModels

@{
    ViewBag.Title = "Node Details";
}

<h2>Details</h2>

<div>
    <h4>Node</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Street)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Street)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Area)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Area)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Latitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Latitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NodeDedails.Longitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NodeDedails.Longitude)
        </dd>

    </dl>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Place)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dots.FirstOrDefault().Longitude)
            </th>
            <th></th>
        </tr>


        @foreach (var item in Model.Dots)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DotType.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Place)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }

    </table>

</div>
<p>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Create new dot", "Create", "Dots", new { nodeId = Model.NodeDedails.Id }, new { @class = "btn btn-success" })
</p>
<hr />
<style>
    #map {
        height: 400px;
        width: 1150px;
    }
</style>

<div id="map"></div>
<script>
    var latLng = { lat: @Model.NodeDedails.Latitude, lng: @Model.NodeDedails.Longitude };
    var map;
    var marker;
    var dotListJS;
    @{var dotListRaw = Model.Dots;}
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center:latLng,
            zoom: 18
        });

        dotListJS = @Html.Raw(Json.Encode(dotListRaw));
        dotListJS.forEach(function (element) {
            marker = new google.maps.Marker({
                position: { lat: element.Latitude, lng: element.Longitude },
                map: map,
                title: element.Name,
                icon: 'https://github.com/VDSnuff/IOTHub/blob/master/IOTHubWeb/App_Data/triangle_64.png?raw=true',
                label: { color: '#ED1C24', fontWeight: 'bold', fontSize: '14px', text: element.Name },
            });
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAEi9L_6xG0THDSXMx0rZZnIqlL0cvtkZg&callback=initMap" async defer></script>
